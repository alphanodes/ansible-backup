---
# defaults file for backup

backup_dir: /srv/backups
backup_dir_mode: '0755'
backup_dir_owner: root
backup_dir_group: root

# Amount of days for daily backup sets
backup_max_days: 3

# Amount of weeks for weekly backup sets
backup_max_weeks: 2

# Amount of months for monthly backup sets
backup_max_months: 1

backup_remote_host: ''
backup_remote_port: ''
backup_remote_dir: ''
backup_remote_excludes:
  - '*.journal'
  - '.nfs*'
  - '*.tar'

backup_rsync_options: '-avz --delete'

# rsync, lftp or borg
backup_remote_transfer: rsync

# only used with lftp
backup_remote_user: ''
backup_remote_password: ''

# Uncompressed SQL files (.sql) as well as bzip2 (.bz2), gzip (.gz) and xz
# (at the moment only used for mysql dumps)
backup_db_dump_format: .sql.gz

backup_with_mysql: false
backup_with_postgresql: false
# all databases are stored in one dump file for mongodb
# (use can use mongorestore with --db to restore a specific database)
backup_with_mongodb: false

backup_mongodb_options: '--archive --gzip'

backup_mysql_db_excludes:
  - performance_schema
  - information_schema
  - sys

backup_mysql_single_transaction: true

# Custom mysql options (always sql.gz is used)
# backup_mysqldump_options: '--extended-insert=true --opt --single-transaction'
backup_mysqldump_options: ''
backup_mysql_defaults_extra_file: ''

backup_postgresqldump_options: "--no-owner -Fc"
backup_create_hashfiles: false
backup_files_unsafe_writes: false

backup_sets: []
# - name: etc
#   src: /etc

# create only one backup per day
# (existing backup of same day will be removed)
backup_one_per_day_limit: true

# if sync_master is defined, backup will be skipped
# (you can use it for replication environments)
# sync_master: anything

# if sync_master is defined, this means it is a sync_client
backup_skip_sync_clients: true

# define commands, which should be run before backup
backup_pre_commands: []

# define commands, which should be run after backup
backup_post_commands: []

backup_with_borg: false
backup_borg_install_from_binary: false
backup_borg_binary_version: '1.1.10'
backup_borg_binary_platform: 'linux64'
backup_borg_binary_uri: "https://github.com/borgbackup/borg/releases/download/{{ backup_borg_binary_version }}/borg-{{ backup_borg_binary_platform }}"
backup_borg_binary: '/usr/local/bin/borg'

# backup_borg_directories:
#  - /etc
#  - /home
#  - /var
backup_borg_directories: []

# backup_borg_excludes: []
#  - 're:^/var/lib/apt'
#  - 're:^/var/[^/]+\/cache/'
backup_borg_excludes: []

# ssh://{{ storageboxes.no1.user }}@{{ storageboxes.no1.host }}:23/./backups/server1
# /srv/borg_backup
backup_borg_repo: ''
backup_borg_passphrase: ''

# there can be used a second repo to create redundant backups
# @see: https://borgbackup.readthedocs.io/en/stable/faq.html#can-i-copy-or-synchronize-my-repo-to-another-location
backup_borg_repo2: ''
backup_borg_passphrase2: ''

backup_borg_prune_keep_daily: 7
backup_borg_prune_keep_weekly: 4
backup_borg_prune_keep_monthly: 2
backup_borg_prune_keep_yearly: 1

# see https://borgbackup.readthedocs.io/en/stable/usage/create.html#
backup_borg_compression: auto,zlib,6
backup_borg_create_name: '{hostname}-{now:%Y-%m-%d_%H:%M}'
# use it for e.g. --one-file-system
backup_borg_create_params: '--compression {{ backup_borg_compression }} -v --stats'
backup_borg_encryption_mode: repokey
backup_borg_with_prune: true
backup_borg_prune_params: '-v --list'
backup_borg_with_check: true
backup_borg_check_params: '-v'
backup_borg_with_info: true
backup_borg_info_params: '-v'
